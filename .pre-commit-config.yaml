# To install the git pre-commit hook run:
#   pre-commit install
# To update the pre-commit hooks run:
#   pre-commit install-hooks
ci:
  autoupdate_schedule: quarterly
  autofix_commit_msg: "chore(deps): auto fixes from pre-commit.com hooks\n\nfor more information, see https://pre-commit.ci"
  autoupdate_commit_msg: "chore(deps): pre-commit autoupdate"
  # These hooks are meant to be run locally only.
  # They fail on pre-commit.ci with "Executable `cargo` not found".
  # Using "language: rust" also didn't work because these are not hooks written in Rust.
  skip: [fmt, cargo-check, clippy]

default_language_version:
  python: python3.11

exclude: '^(\.tox|ci/templates|\.bumpversion\.cfg)(/|$)'
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
  - repo: https://github.com/pappasam/toml-sort
    rev: v0.24.3
    hooks:
      - id: toml-sort-fix
        exclude: '.*\.lock$'
  - repo: https://github.com/google/keep-sorted
    rev: v0.7.1
    hooks:
      - id: keep-sorted
  - repo: https://github.com/openstack/bashate
    rev: 2.1.1
    hooks:
      - id: bashate
        args: [-i, E006]
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.10.0.1
    hooks:
      - id: shellcheck
  - repo: https://github.com/jumanjihouse/pre-commit-hooks
    rev: 3.0.0
    hooks:
      - id: shfmt
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        stages:
          - pre-commit
  - repo: https://github.com/doublify/pre-commit-rust
    rev: v1.0
    hooks:
      - id: fmt
      - id: cargo-check
      - id: clippy
  - repo: https://github.com/commitizen-tools/commitizen
    rev: v4.9.1
    hooks:
      - id: commitizen
        stages:
          - commit-msg
  - repo: https://github.com/mxr/sync-pre-commit-deps
    rev: v0.0.3
    hooks:
      - id: sync-pre-commit-deps
